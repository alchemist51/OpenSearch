/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

testingConventions.enabled = false

dependencies {
  constraints {
    implementation("commons-logging:commons-logging") {
      version {
        reject()
      }
    }
  }

  api project(':libs:opensearch-core')

  implementation 'org.slf4j:slf4j-api:1.7.25'
  runtimeOnly 'org.slf4j:slf4j-simple:1.7.25'
// You can use both to be safe
  implementation 'org.antlr:antlr4-runtime:4.13.1'
  runtimeOnly 'org.antlr:antlr4-runtime:4.13.1'

  // Core Arrow dependencies
  api "org.apache.arrow:arrow-vector:${versions.arrow}"
  api "org.apache.arrow:arrow-format:${versions.arrow}"
  api "org.apache.arrow:arrow-memory-core:${versions.arrow}"
  api "org.apache.arrow:arrow-memory-netty:${versions.arrow}"
  api "org.apache.arrow:arrow-dataset:${versions.arrow}"
  api "org.apache.arrow:arrow-c-data:${versions.arrow}"

  // Additional Arrow dependencies needed for dataset functionality
  api "org.apache.arrow:arrow-compression:${versions.arrow}"
  api "org.apache.arrow:arrow-avro:${versions.arrow}"
  api "org.apache.arrow:arrow-jdbc:${versions.arrow}"

  // Memory management dependencies
  runtimeOnly "org.apache.arrow:arrow-memory-netty-buffer-patch:${versions.arrow}"
  runtimeOnly "org.apache.arrow:arrow-memory-unsafe:${versions.arrow}"

  // Netty dependencies
  runtimeOnly "io.netty:netty-buffer:${versions.netty}"
  runtimeOnly "io.netty:netty-common:${versions.netty}"
  runtimeOnly "io.netty:netty-transport:${versions.netty}"
  runtimeOnly "io.netty:netty-handler:${versions.netty}"

  // Additional runtime dependencies
  runtimeOnly "org.apache.arrow:arrow-algorithm:${versions.arrow}"

  runtimeOnly "com.google.guava:guava:31.1-jre"
  runtimeOnly "com.google.guava:failureaccess:1.0.1"


  // Add JsonPath dependency
  runtimeOnly "com.jayway.jsonpath:json-path:2.8.0"  // Use appropriate version

  // If you need the JSON-smart implementation
  runtimeOnly "net.minidev:json-smart:2.5.1"  // Use appropriate version
  runtimeOnly "org.codehaus.janino:janino:3.1.10"  // Use appropriate version
  runtimeOnly "org.codehaus.janino:commons-compiler:3.1.10"  // Same version as janinos
  // Keep your existing dependencies
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.14.0'
  runtimeOnly 'org.apache.commons:commons-math3:3.6.1'

// Calcite dependencies - replace the existing Calcite section with this:
  api("org.apache.calcite:calcite-core:${versions.calcite}") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  api("org.apache.calcite:calcite-server:${versions.calcite}") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  api("org.apache.calcite:calcite-linq4j:${versions.calcite}") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  api("org.apache.calcite.avatica:avatica-core:${versions.avatica}") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }

//  api "org.apache.calcite:calcite-core:${versions.calcite}"
//  runtimeOnly "org.apache.calcite:calcite-linq4j:${versions.calcite}"
//  runtimeOnly "org.apache.calcite.avatica:avatica-core:${versions.avatica}"
// Make sure these are included as api dependencies instead of runtimeOnly
//  api("org.apache.calcite:calcite-plus:${versions.calcite}") {
//    exclude group: 'org.slf4j', module: 'slf4j-api'
//  }
//  api("org.apache.calcite:calcite-babel:${versions.calcite}") {
//    exclude group: 'org.slf4j', module: 'slf4j-api'
//  }

  // Substrait dependencies with SLF4J exclusions
  api "io.substrait:core:${versions.substrait}"

  api "io.substrait:isthmus:${versions.substrait}"

  // Calcite with exclusions
//  api "org.apache.calcite:calcite-core:${versions.calcite}"
//
//  runtimeOnly "org.apache.calcite:calcite-linq4j:${versions.calcite}"
//  runtimeOnly "org.apache.calcite.avatica:avatica-core:${versions.avatica}"

  runtimeOnly "com.google.flatbuffers:flatbuffers-java:${versions.flatbuffers}"
  runtimeOnly "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
  api "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
  implementation "commons-codec:commons-codec:${versions.commonscodec}"
}

tasks.named('forbiddenApisMain').configure {
  replaceSignatureFiles 'jdk-signatures'
}

tasks.named('thirdPartyAudit').configure {
  ignoreMissingClasses(
    // Logging frameworks
    'org.apache.commons.logging.Log',
    'org.apache.commons.logging.LogFactory',
    'org.apache.log4j.Level',
    'org.apache.log4j.Logger',
    'org.slf4j.impl.StaticLoggerBinder',
    'org.slf4j.impl.StaticMDCBinder',
    'org.slf4j.impl.StaticMarkerBinder',

    // Reactor BlockHound
    'reactor.blockhound.BlockHound$Builder',
    'reactor.blockhound.integration.BlockHoundIntegration'
  )

  ignoreViolations(
    "io.netty.util.internal.PlatformDependent0",
    "io.netty.util.internal.PlatformDependent0\$1",
    "io.netty.util.internal.PlatformDependent0\$2",
    "io.netty.util.internal.PlatformDependent0\$3",
    "io.netty.util.internal.PlatformDependent0\$4",
    "io.netty.util.internal.PlatformDependent0\$6",
    "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef",
    "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef",
    "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode",
    "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueConsumerIndexField",
    "io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueProducerIndexField",
    "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess",
    "io.netty.util.internal.shaded.org.jctools.util.UnsafeLongArrayAccess",
    "io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess",
    "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueConsumerIndexField",
    "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerIndexField",
    "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerLimitField",
    "org.apache.arrow.memory.ArrowBuf",
    "org.apache.arrow.memory.util.ByteFunctionHelpers",
    "org.apache.arrow.memory.util.MemoryUtil",
    "org.apache.arrow.memory.util.MemoryUtil\$1",
    "org.apache.arrow.memory.util.hash.MurmurHasher",
    "org.apache.arrow.memory.util.hash.SimpleHasher",
    "org.apache.arrow.vector.BaseFixedWidthVector",
    "org.apache.arrow.vector.BitVectorHelper",
    "org.apache.arrow.vector.Decimal256Vector",
    "org.apache.arrow.vector.DecimalVector",
    "org.apache.arrow.vector.util.DecimalUtility",
    "org.apache.arrow.vector.util.VectorAppender",
    'org.apache.commons.logging.Log',
    'org.apache.commons.logging.LogFactory',

    // Commons logging
    'javax.servlet.ServletContextEvent',
    'javax.servlet.ServletContextListener',
    'org.apache.avalon.framework.logger.Logger',
    'org.apache.log.Hierarchy',
    'org.apache.log.Logger',

    'org.slf4j.helpers.FormattingTuple',
    'org.slf4j.helpers.MessageFormatter',
    'org.slf4j.Logger',
    'org.slf4j.LoggerFactory',
    'org.slf4j.spi.LocationAwareLogger',
  )
}
